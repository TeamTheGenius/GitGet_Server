name: Build and Deploy to EC2

on:
  push:
    branches: [ "chore/release-test-hey" ]
  pull_request:
    branches: [ "chore/release-test-hey" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: gitget-bucket-hey
  AWS_CODE_DEPLOY_APPLICATION: GitGet-Application-HEY
  AWS_CODE_DEPLOY_GROUP: GitGet-CICD-group-hey

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make application.yml
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml

      - name: make other application-{profile}.yml
        run: |
          cd ./src/main/resources
          touch ./application-config.yml
          echo "${{ secrets.CONFIG }}" > ./application-config.yml
          
          touch ./application-db.yml
          echo "${{ secrets.DATABASE }}" > ./application-db.yml
          
          touch ./application-file.yml
          echo "${{ secrets.FILE }}" > ./application-file.yml
          
          touch ./application-github.yml
          echo "${{ secrets.GITHUB }}" > ./application-github.yml
          
          touch ./application-jwt.yml
          echo "${{ secrets.JWT }}" > ./application-jwt.yml
          
          touch ./application-oauth.yml
          echo "${{ secrets.OAUTH }}" > ./application-oauth.yml
          
          touch ./application-payment.yml
          echo "${{ secrets.PAYMENT }}" > ./application-payment.yml



      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build and Test
        run: ./gradlew build -x test # 임시로 테스트 없이 빌드 시행
      #        run: ./gradlew build test

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY_HEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY_HEY }}


      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

      #      - name: S3에 업로드
      #        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
      # test

      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip



